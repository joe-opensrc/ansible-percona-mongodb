- name: Make directories ( "{{ mongod_root_path }}" )
  become: yes
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    mode: 0755
  loop:
    - "{{ mongod_root_path }}"

- name: Make directories ( "{{ mongod_user }}" )
  become: yes
  ansible.builtin.file:
    state: directory
    owner: "{{ mongod_user }}"
    group: "{{ mongod_group }}"
    path:  "{{ item }}"
    mode: 0755
  loop:
    - "{{ mongod_db_path }}"
    - /var/log/mongodb
    - /var/run/mongodb

- name: Install prequisites via package manager
  ansible.builtin.apt:
    update_cache: yes
    package:
      - lsb-release
      - curl
      - gnupg2

- name: Set debian package name fact
  ansible.builtin.set_fact:
    percona_release_deb: "percona-release_latest.{{ ansible_facts['distribution_release'] | default('generic') }}_all.deb"

- name: Output, show deb package name
  ansible.builtin.debug:
    msg: "percona-release: {{ percona_release_deb }}"

- name: Fetch latest percona-release
  ansible.builtin.get_url:
    owner: "{{ mongod_user }}"
    group: "{{ mongod_group }}"
    mode: 0750
    validate_certs: no
    url: "https://repo.percona.com/apt/{{ percona_release_deb }}"
    dest: "{{ mongod_root_path }}/"

- name: Install percona-release
  ansible.builtin.apt:
    update_cache: yes
    deb: "{{ mongod_root_path }}/{{ percona_release_deb }}"

- name: Install Dependencies
  ansible.builtin.command: apt-get install -f

- name: Enable psmdb-44 + pbm-backup release
  become: yes
  ansible.builtin.command: "{{ item }}"
  loop:
    - percona-release enable psmdb-44 release
    - percona-release enable pbm release
    - apt-get update

- name: Install percona-release
  ansible.builtin.apt:
    update_cache: yes
    package:
      - percona-server-mongodb
      - percona-backup-mongodb

- name: Render out mongod and systemd config
  become: yes
  ansible.builtin.template:
    src:  "templates{{ item }}.j2"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - /etc/mongod.conf
